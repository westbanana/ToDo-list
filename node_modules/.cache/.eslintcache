[{"C:\\Programing\\Projects\\todo-list\\src\\index.js":"1","C:\\Programing\\Projects\\todo-list\\src\\App.js":"2","C:\\Programing\\Projects\\todo-list\\src\\components\\CreateToDo\\index.js":"3","C:\\Programing\\Projects\\todo-list\\src\\components\\ToDo\\index.js":"4","C:\\Programing\\Projects\\todo-list\\src\\components\\CheckBox\\index.js":"5","C:\\Programing\\Projects\\todo-list\\src\\components\\Background\\index.js":"6","C:\\Programing\\Projects\\todo-list\\src\\components\\Hint\\index.js":"7","C:\\Programing\\Projects\\todo-list\\src\\components\\SwitchTheme\\index.js":"8","C:\\Programing\\Projects\\todo-list\\src\\components\\Settings\\index.js":"9","C:\\Programing\\Projects\\todo-list\\src\\components\\Helpers\\GetData.js":"10"},{"size":211,"mtime":1674653998377,"results":"11","hashOfConfig":"12"},{"size":1787,"mtime":1682371487746,"results":"13","hashOfConfig":"12"},{"size":2026,"mtime":1682371041445,"results":"14","hashOfConfig":"12"},{"size":3915,"mtime":1682370951477,"results":"15","hashOfConfig":"12"},{"size":853,"mtime":1682275095220,"results":"16","hashOfConfig":"12"},{"size":590,"mtime":1682009510828,"results":"17","hashOfConfig":"12"},{"size":1244,"mtime":1682252643610,"results":"18","hashOfConfig":"12"},{"size":287,"mtime":1682275947976,"results":"19","hashOfConfig":"12"},{"size":1511,"mtime":1682278339994,"results":"20","hashOfConfig":"12"},{"size":401,"mtime":1682274573967,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1eqag3m",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Programing\\Projects\\todo-list\\src\\index.js",[],[],["56","57","58","59","60","61"],"C:\\Programing\\Projects\\todo-list\\src\\App.js",["62"],[],"import React, { useEffect, useRef, useState } from 'react';\n\nimport style from './style.module.scss';\nimport CreateToDo from './components/CreateToDo';\nimport ToDo from './components/ToDo';\nimport Background from './components/Background';\nimport Settings from './components/Settings';\nimport { ReactComponent as Arrow } from './assets/arrow.svg';\n\nconst App = () => {\n  const [toDoList, setToDoList] = useState(localStorage.getItem('ToDos') ? JSON.parse(localStorage.getItem('ToDos')) : []);\n  const [inputToDoName, setInputToDoName] = useState('');\n  const refHeader = useRef(null);\n  // DAy JS /DATE FNS\n  useEffect(() => {\n    localStorage.setItem('ToDos', JSON.stringify(toDoList));\n  }, [toDoList]);\n\n  const executeScroll = () => refHeader.current.scrollIntoView();\n\n  return (\n    <div\n      className={style.main}\n    >\n      <Arrow\n        className={style.arrow}\n        role=\"presentation\"\n        onClick={executeScroll}\n      />\n      <Background />\n      <header ref={refHeader}>\n        <span>ToDo list</span>\n      </header>\n      <Settings\n        onClick={() => console.log('click')}\n      />\n      <body\n        className={style.authorized}\n      >\n        <div className={style.todoBlock}>\n          <div className={style.createToDoBLock}>\n            <CreateToDo\n              inputToDoName={inputToDoName}\n              setInputToDoName={setInputToDoName}\n              toDoList={toDoList}\n            />\n          </div>\n          <div className={style.toDoList}>\n            {toDoList.map(e => (\n              <ToDo\n                key={e.id}\n                e={e}\n                toDoList={toDoList}\n                setToDoList={setToDoList}\n              />\n            ))}\n          </div>\n        </div>\n      </body>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Programing\\Projects\\todo-list\\src\\components\\CreateToDo\\index.js",[],[],"C:\\Programing\\Projects\\todo-list\\src\\components\\ToDo\\index.js",["63"],[],"import React, { useRef, useState } from 'react';\n\nimport style from './style.module.scss';\n\nimport { ReactComponent as Xmark } from '../../assets/xmark.svg';\nimport { ReactComponent as Info } from '../../assets/info.svg';\nimport { ReactComponent as Accept } from '../../assets/accept.svg';\nimport { ReactComponent as Edit } from '../../assets/edit.svg';\nimport CheckBox from '../CheckBox';\nimport Hint from '../Hint';\n\nconst ToDo = ({ e, toDoList, setToDoList }) => {\n  const [isActive, setIsActive] = useState(false);\n  const [editClicked, setEditClicked] = useState(false);\n  const [inputTodoName, setInputTodoName] = useState('');\n  const refToDo = useRef(null);\n  const deleteToDo = () => {\n    const arr = toDoList.filter(todo => todo.id !== e.id);\n    refToDo.current.classList.add(`${style.removeTodo}`);\n    setTimeout(() => {\n      setToDoList(arr);\n    }, 300);\n  };\n  const changeInputName = (input) => {\n    setInputTodoName(input.target.value);\n  };\n  console.log(toDoList);\n  const changeTodoName = () => {\n    setToDoList(prev => prev.map((todo) => {\n      if (\n        todo.id === e.id\n        && inputTodoName.length\n        && !e.isActive\n      ) {\n        return ({ ...todo, name: inputTodoName });\n      }\n      return todo;\n    }));\n    setInputTodoName('');\n    setEditClicked(false);\n  };\n\n  const openEditTodo = () => {\n    if (!e.isActive) setEditClicked(true);\n  };\n\n  const closeEditTodo = () => {\n    setEditClicked(false);\n  };\n\n  return (\n    <div\n      ref={refToDo}\n      role=\"presentation\"\n      className={e.isActive ? style.done : style.toDo}\n    >\n      <CheckBox\n        e={e}\n        setTodoList={setToDoList}\n        toDoList={toDoList}\n        setIsActive={setIsActive}\n        isActive={isActive}\n      />\n      {editClicked && (\n        <div\n          className={style.test}\n          style={{\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgb(47,47,47)',\n            backdropFilter: 'blur(5px)',\n            zIndex: 99999999,\n            left: 0,\n            top: 0,\n            position: 'absolute',\n            borderRadius: 20,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            flexDirection: 'column',\n            gap: 'calc(50% - 26px)',\n            padding: '10px 40px',\n          }}\n        >\n          <input\n            type=\"text\"\n            autoFocus\n            style={{\n              color: 'white',\n              backgroundColor: 'transparent',\n              outline: 'none',\n              border: 'none',\n              width: '100%',\n              textAlign: 'center',\n            }}\n            onChange={changeInputName}\n            value={inputTodoName}\n            placeholder={e.name}\n          />\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'flex-end',\n              gap: '20px',\n            }}\n          >\n            <Accept\n              onClick={changeTodoName}\n              className={style.accept}\n            />\n            <Xmark\n              className={style.xMark}\n              onClick={closeEditTodo}\n            />\n          </div>\n        </div>\n      )}\n      <div className={`${e.isActive ? style.toDoDone : style.toDoTittle}`}>\n        <span>\n          {e.name}\n        </span>\n      </div>\n      <div className={`${style.toDoTime} ${e.time ? style.throughTime : ''}`}>\n        <span>{e.time}</span>\n      </div>\n      <div className={style.todoSettingsBlock}>\n        <div className={style.info}>\n          <Hint data={e}>\n            <Info />\n          </Hint>\n        </div>\n        <Edit\n          onClick={openEditTodo}\n          className={style.edit}\n        />\n        <Xmark\n          className={style.xMark}\n          role=\"presentation\"\n          onClick={deleteToDo}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;\n","C:\\Programing\\Projects\\todo-list\\src\\components\\CheckBox\\index.js",[],[],"C:\\Programing\\Projects\\todo-list\\src\\components\\Background\\index.js",[],["64"],"C:\\Programing\\Projects\\todo-list\\src\\components\\Hint\\index.js",[],[],"C:\\Programing\\Projects\\todo-list\\src\\components\\SwitchTheme\\index.js",["65"],[],"import React from 'react';\n\nimport styles from './style.module.scss';\n\nconst SwitchTheme = () => {\n  console.log('switch');\n  return (\n    <div\n      className={styles.mainBlock}\n    >\n      <div\n        className={styles.circle}\n      />\n    </div>\n  );\n};\n\nexport default SwitchTheme;\n","C:\\Programing\\Projects\\todo-list\\src\\components\\Settings\\index.js",[],[],"C:\\Programing\\Projects\\todo-list\\src\\components\\Helpers\\GetData.js",[],[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":35,"column":24,"nodeType":"80","messageId":"81","endLine":35,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":27,"column":3,"nodeType":"80","messageId":"81","endLine":27,"endColumn":14},{"ruleId":"82","severity":2,"message":"83","line":13,"column":16,"nodeType":"84","messageId":"85","endLine":13,"endColumn":25,"suppressions":"86"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":14},"lines-around-directive",["87"],"no-spaced-func",["88"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react/no-array-index-key","Do not use Array index in keys","BinaryExpression","noArrayIndex",["89"],"padding-line-between-statements","func-call-spacing",{"kind":"90","justification":"91"},"directive",""]