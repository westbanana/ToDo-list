{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programing\\\\Projects\\\\todo-list\\\\src\\\\components\\\\ToDo\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport style from './style.module.scss';\nimport { ReactComponent as Xmark } from '../../assets/xmark.svg';\nimport { ReactComponent as Info } from '../../assets/info.svg';\nimport { ReactComponent as Accept } from '../../assets/accept.svg';\nimport { ReactComponent as Edit } from '../../assets/edit.svg';\nimport CheckBox from '../CheckBox';\nimport Hint from '../Hint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    e,\n    toDoList,\n    setToDoList\n  } = _ref;\n  const [isActive, setIsActive] = useState(false);\n  const [editClicked, setEditClicked] = useState(false);\n  const refToDo = useRef(null);\n  const deleteToDo = () => {\n    const arr = toDoList.filter(todo => todo.id !== e.id);\n    refToDo.current.classList.add(`${style.removeTodo}`);\n    setTimeout(() => {\n      setToDoList(arr);\n    }, 300);\n  };\n  const changeTodoName = () => {\n    setToDoList(prev => {\n      prev.map(todo => {\n        if (e.id === todo) {\n          return {\n            ...todo,\n            name: 'govno'\n          };\n        }\n        return todo;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refToDo,\n    role: \"presentation\",\n    className: e.isActive ? style.done : style.toDo,\n    children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n      e: e,\n      setTodoList: setToDoList,\n      toDoList: toDoList,\n      setIsActive: setIsActive,\n      isActive: isActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), editClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.test,\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgb(47,47,47)',\n        backdropFilter: 'blur(5px)',\n        zIndex: 99999999,\n        left: 0,\n        top: 0,\n        position: 'absolute',\n        borderRadius: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flexDirection: 'column',\n        gap: 'calc(50% - 26px)',\n        padding: '10px 40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          color: 'white',\n          backgroundColor: 'transparent',\n          outline: 'none',\n          border: 'none',\n          width: '100%',\n          textAlign: 'center'\n        },\n        placeholder: e.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          width: '100%',\n          justifyContent: 'flex-end',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Accept, {\n          onClick: changeTodoName,\n          className: style.accept\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Xmark, {\n          className: style.xMark,\n          onClick: () => setEditClicked(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${e.isActive ? style.toDoDone : style.toDoTittle}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: e.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${style.toDoTime} ${e.time ? style.throughTime : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: e.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.todoSettingsBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.info,\n        children: /*#__PURE__*/_jsxDEV(Hint, {\n          data: e,\n          children: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Edit, {\n        onClick: () => setEditClicked(true),\n        className: style.edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Xmark, {\n        className: style.xMark,\n        role: \"presentation\",\n        onClick: deleteToDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDo, \"gH4AJGi8fLZEDlQ/vl/Ft21p7ks=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useRef","useState","style","ReactComponent","Xmark","Info","Accept","Edit","CheckBox","Hint","ToDo","e","toDoList","setToDoList","isActive","setIsActive","editClicked","setEditClicked","refToDo","deleteToDo","arr","filter","todo","id","current","classList","add","removeTodo","setTimeout","changeTodoName","prev","map","name","done","toDo","test","width","height","backgroundColor","backdropFilter","zIndex","left","top","position","borderRadius","display","alignItems","justifyContent","flexDirection","gap","padding","color","outline","border","textAlign","accept","xMark","toDoDone","toDoTittle","toDoTime","time","throughTime","todoSettingsBlock","info","edit"],"sources":["C:/Programing/Projects/todo-list/src/components/ToDo/index.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport style from './style.module.scss';\n\nimport { ReactComponent as Xmark } from '../../assets/xmark.svg';\nimport { ReactComponent as Info } from '../../assets/info.svg';\nimport { ReactComponent as Accept } from '../../assets/accept.svg';\nimport { ReactComponent as Edit } from '../../assets/edit.svg';\nimport CheckBox from '../CheckBox';\nimport Hint from '../Hint';\n\nconst ToDo = ({ e, toDoList, setToDoList }) => {\n  const [isActive, setIsActive] = useState(false);\n  const [editClicked, setEditClicked] = useState(false);\n  const refToDo = useRef(null);\n  const deleteToDo = () => {\n    const arr = toDoList.filter(todo => todo.id !== e.id);\n    refToDo.current.classList.add(`${style.removeTodo}`);\n    setTimeout(() => {\n      setToDoList(arr);\n    }, 300);\n  };\n  const changeTodoName = () => {\n    setToDoList((prev) => {\n      prev.map((todo) => {\n        if (e.id === todo) {\n          return {\n            ...todo,\n            name: 'govno',\n          };\n        }\n        return todo;\n      });\n    });\n  };\n  return (\n    <div\n      ref={refToDo}\n      role=\"presentation\"\n      className={e.isActive ? style.done : style.toDo}\n    >\n      <CheckBox\n        e={e}\n        setTodoList={setToDoList}\n        toDoList={toDoList}\n        setIsActive={setIsActive}\n        isActive={isActive}\n      />\n      {editClicked && (\n        <div\n          className={style.test}\n          style={{\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgb(47,47,47)',\n            backdropFilter: 'blur(5px)',\n            zIndex: 99999999,\n            left: 0,\n            top: 0,\n            position: 'absolute',\n            borderRadius: 20,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            flexDirection: 'column',\n            gap: 'calc(50% - 26px)',\n            padding: '10px 40px',\n          }}\n        >\n          <input\n            type=\"text\"\n            style={{\n              color: 'white',\n              backgroundColor: 'transparent',\n              outline: 'none',\n              border: 'none',\n              width: '100%',\n              textAlign: 'center',\n            }}\n            placeholder={e.name}\n          />\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'flex-end',\n              gap: '20px',\n            }}\n          >\n            <Accept\n              onClick={changeTodoName}\n              className={style.accept}\n            />\n            <Xmark\n              className={style.xMark}\n              onClick={() => setEditClicked(false)}\n            />\n          </div>\n        </div>\n      )}\n      <div className={`${e.isActive ? style.toDoDone : style.toDoTittle}`}>\n        <span>\n          {e.name}\n        </span>\n      </div>\n      <div className={`${style.toDoTime} ${e.time ? style.throughTime : ''}`}>\n        <span>{e.time}</span>\n      </div>\n      <div className={style.todoSettingsBlock}>\n        <div className={style.info}>\n          <Hint data={e}>\n            <Info />\n          </Hint>\n        </div>\n        <Edit\n          onClick={() => setEditClicked(true)}\n          className={style.edit}\n        />\n        <Xmark\n          className={style.xMark}\n          role=\"presentation\"\n          onClick={deleteToDo}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}