{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programing\\\\Projects\\\\todo-list\\\\src\\\\components\\\\CreateToDo\\\\index.js\";\nimport React from 'react';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateToDo = _ref => {\n  let {\n    inputToDoName,\n    setInputToDoName,\n    toDoList\n  } = _ref;\n  const createToDo = () => {\n    const data = new Date();\n    const monthShortNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const todoData = `${data.getDate()}/${monthShortNames[data.getMonth()]}/${data.getFullYear()}/${data.getHours()}:${data.getMinutes() > 10 ? data.getMinutes() : `0${data.getMinutes()}`}`;\n    if (inputToDoName) {\n      const todo = {\n        name: inputToDoName,\n        time: todoData,\n        id: new Date().getTime(),\n        description: ''\n      };\n      toDoList.push(todo);\n      localStorage.setItem('ToDos', JSON.stringify(toDoList));\n      setInputToDoName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.main,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write what to do\",\n        value: inputToDoName,\n        required: true,\n        onChange: e => setInputToDoName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createToDo,\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = CreateToDo;\nexport default CreateToDo;\nvar _c;\n$RefreshReg$(_c, \"CreateToDo\");","map":{"version":3,"names":["React","style","CreateToDo","inputToDoName","setInputToDoName","toDoList","createToDo","data","Date","monthShortNames","todoData","getDate","getMonth","getFullYear","getHours","getMinutes","todo","name","time","id","getTime","description","push","localStorage","setItem","JSON","stringify","main","e","target","value"],"sources":["C:/Programing/Projects/todo-list/src/components/CreateToDo/index.js"],"sourcesContent":["import React from 'react';\n\nimport style from './style.module.scss';\n\nconst CreateToDo = ({ inputToDoName, setInputToDoName, toDoList }) => {\n  const createToDo = () => {\n    const data = new Date();\n    const monthShortNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n    ];\n    const todoData = `${data.getDate()}/${monthShortNames[data.getMonth()]}/${data.getFullYear()}/${data.getHours()}:${data.getMinutes() > 10\n      ? data.getMinutes()\n      : `0${data.getMinutes()}`}`;\n    if (inputToDoName) {\n      const todo = {\n        name: inputToDoName,\n        time: todoData,\n        id: (new Date().getTime()),\n        description: '',\n      };\n      toDoList.push(todo);\n      localStorage.setItem('ToDos', JSON.stringify(toDoList));\n      setInputToDoName('');\n    }\n  };\n\n  return (\n    <div className={style.main}>\n      <form action=\"#\">\n        <input\n          type=\"text\"\n          placeholder=\"Write what to do\"\n          value={inputToDoName}\n          required\n          onChange={e => setInputToDoName(e.target.value)}\n        />\n        <button\n          onClick={createToDo}\n          type=\"submit\"\n        >\n          Create\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateToDo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,MAAMC,UAAU,GAAG,QAAmD;EAAA,IAAlD;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC;EAAS,CAAC;EAC/D,MAAMC,UAAU,GAAG,MAAM;IACvB,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACvB,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAC/D,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACzC;IACD,MAAMC,QAAQ,GAAI,GAAEH,IAAI,CAACI,OAAO,EAAG,IAAGF,eAAe,CAACF,IAAI,CAACK,QAAQ,EAAE,CAAE,IAAGL,IAAI,CAACM,WAAW,EAAG,IAAGN,IAAI,CAACO,QAAQ,EAAG,IAAGP,IAAI,CAACQ,UAAU,EAAE,GAAG,EAAE,GACrIR,IAAI,CAACQ,UAAU,EAAE,GAChB,IAAGR,IAAI,CAACQ,UAAU,EAAG,EAAE,EAAC;IAC7B,IAAIZ,aAAa,EAAE;MACjB,MAAMa,IAAI,GAAG;QACXC,IAAI,EAAEd,aAAa;QACnBe,IAAI,EAAER,QAAQ;QACdS,EAAE,EAAG,IAAIX,IAAI,EAAE,CAACY,OAAO,EAAG;QAC1BC,WAAW,EAAE;MACf,CAAC;MACDhB,QAAQ,CAACiB,IAAI,CAACN,IAAI,CAAC;MACnBO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACrB,QAAQ,CAAC,CAAC;MACvDD,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAEH,KAAK,CAAC0B,IAAK;IAAA,uBACzB;MAAM,MAAM,EAAC,GAAG;MAAA,wBACd;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,kBAAkB;QAC9B,KAAK,EAAExB,aAAc;QACrB,QAAQ;QACR,QAAQ,EAAEyB,CAAC,IAAIxB,gBAAgB,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAChD,eACF;QACE,OAAO,EAAExB,UAAW;QACpB,IAAI,EAAC,QAAQ;QAAA,UACd;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,KAzCIJ,UAAU;AA2ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}